generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Client {
  // IDs
  id               String         @id @default(uuid())
  uniqueId         String?        @unique @map("unique_id")

  // Personal Info
  firstName        String?        @map("first_name")
  lastName         String?        @map("last_name")
  name             String
  rut              String?        @unique
  email            String?        @unique
  phone            String?

  // Address
  address          String?
  propertyType     String?        @map("property_type")
  propertyNumber   String?        @map("property_number")
  comuna           String?

  // Account Status
  status           String         @default("ACTIVE")
  generalComments  String?        @map("general_comments")
  contactChannel   String?        @map("contact_channel")

  // Timestamps
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")

  // Relations
  maintenances     Maintenance[]
  incidents        Incident[]
  equipment        Equipment[]
  contracts        Contract[]

  @@map("clients")
}

model Maintenance {
  id            String            @id @default(uuid())
  clientId      String            @map("client_id")

  // Dates
  scheduledDate DateTime          @map("scheduled_date")    // Programmed date from Excel
  actualDate    DateTime?         @map("actual_date")       // When it was actually done
  completedDate DateTime?         @map("completed_date")

  // Type and cycle
  type          String                                      // 6_months, 12_months, etc
  cycleNumber   Int?              @map("cycle_number")      // 1, 2, 3, 4

  // Status
  status        String            @default("PENDING")

  // Metrics (calculated)
  deviationDays Int?              @map("deviation_days")    // actualDate - scheduledDate
  responseRate  String?           @map("response_rate")     // EXCELLENT/GOOD/FAIR/POOR

  // Notes
  notes         String?
  observations  String?                                     // From Excel
  technicianId  String?           @map("technician_id")

  // Timestamps
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt @map("updated_at")

  // Relations
  client        Client            @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@unique([clientId, cycleNumber], name: "unique_client_cycle")
  @@index([scheduledDate])
  @@index([actualDate])
  @@index([status])
  @@index([responseRate])
  @@index([cycleNumber])
  @@map("maintenances")
}

model Equipment {
  id                  String    @id @default(uuid())
  clientId            String    @map("client_id")

  // Equipment details
  equipmentType       String?   @map("equipment_type")
  serialNumber        String?   @map("serial_number")
  color               String?
  filterType          String?   @map("filter_type")

  // Installation details
  installationDate    DateTime? @map("installation_date")
  deliveryType        String?   @map("delivery_type")
  installerTechnician String?   @map("installer_technician")

  // Active tracking (supports equipment history)
  isActive            Boolean   @default(true) @map("is_active")

  // Timestamps
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @updatedAt @map("updated_at")

  // Relations
  client              Client    @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([isActive])
  @@index([filterType])
  @@map("equipment")
}

model Contract {
  id               String    @id @default(uuid())
  clientId         String    @map("client_id")

  // Plan details
  planCode         String?   @map("plan_code")
  planType         String?   @map("plan_type")

  // Pricing
  planCurrency     String?   @map("plan_currency")
  planValueCLP     Int?      @map("plan_value_clp")
  monthlyValueCLP  Int?      @map("monthly_value_clp")
  monthlyValueUF   Float?    @map("monthly_value_uf")
  discountPercent  Float?    @map("discount_percent")

  // Payment methods
  tokuEnabled      Boolean   @default(false) @map("toku_enabled")
  needsInvoice     Boolean?  @map("needs_invoice")

  // Contract period
  startDate        DateTime? @map("start_date")
  endDate          DateTime? @map("end_date")

  // Active tracking (supports contract history)
  isActive         Boolean   @default(true) @map("is_active")

  // Timestamps
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  // Relations
  client           Client    @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([isActive])
  @@index([planCode])
  @@index([startDate])
  @@map("contracts")
}

model Inventory {
  id            String       @id @default(uuid())
  equipmentType String       @map("equipment_type")
  quantity      Int          @default(0)
  minStock      Int          @default(10) @map("min_stock")
  location      String?
  lastRestocked DateTime?    @map("last_restocked")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  @@unique([equipmentType, location])
  @@map("inventory")
}

model Incident {
  id          String         @id @default(uuid())
  clientId    String         @map("client_id")
  type        String         // TODO: Change to IncidentType after running supabase/fix-enums.sql
  description String
  status      String         @default("OPEN") // TODO: Change to IncidentStatus after running supabase/fix-enums.sql
  priority    String         @default("MEDIUM") // TODO: Change to Priority after running supabase/fix-enums.sql
  resolvedAt  DateTime?      @map("resolved_at")
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  
  client      Client         @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  @@index([status])
  @@index([createdAt])
  @@map("incidents")
}

// Enums
enum ClientStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  CANCELLED
}

enum MaintenanceType {
  SIX_MONTHS      @map("6_months")
  TWELVE_MONTHS   @map("12_months")
  EIGHTEEN_MONTHS @map("18_months")
  TWENTY_FOUR_MONTHS @map("24_months")
}

enum MaintenanceStatus {
  PENDING
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  RESCHEDULED
}

enum IncidentType {
  EQUIPMENT_FAILURE
  FILTER_ISSUE
  WATER_QUALITY
  BILLING
  OTHER
}

enum IncidentStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}